# ============================================
# Docker Compose Configuration
# Development and testing environment
# ============================================

version: '3.8'

services:
  # ============================================
  # PostgreSQL Database
  # ============================================
  postgres:
    image: postgres:14-alpine
    container_name: nexusforge-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nexusforge
      POSTGRES_MULTIPLE_DATABASES: nexusforge_python,nexusforge_node,nexusforge_go
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - nexusforge
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Redis Cache
  # ============================================
  redis:
    image: redis:6-alpine
    container_name: nexusforge-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nexusforge
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Python FastAPI Service
  # ============================================
  python-api:
    build:
      context: ../..
      dockerfile: config/docker/Dockerfile.python
    container_name: nexusforge-python-api
    environment:
      ENV: development
      PORT: 8000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/nexusforge_python
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-secret-change-in-production
      LOG_LEVEL: info
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - nexusforge
    volumes:
      - ../../workspace/python:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # ============================================
  # Node.js Express Service
  # ============================================
  nodejs-api:
    build:
      context: ../..
      dockerfile: config/docker/Dockerfile.node
    container_name: nexusforge-nodejs-api
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/nexusforge_node
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-secret-change-in-production
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - nexusforge
    volumes:
      - ../../workspace/nodejs:/app
      - /app/node_modules
    command: npm run dev

  # ============================================
  # Go Gin Service
  # ============================================
  go-api:
    build:
      context: ../..
      dockerfile: config/docker/Dockerfile.go
    container_name: nexusforge-go-api
    environment:
      ENV: development
      PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: nexusforge_go
      DB_SSL_MODE: disable
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-secret-change-in-production
      LOG_LEVEL: info
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - nexusforge
    volumes:
      - ../../workspace/go:/app

  # ============================================
  # Nginx Reverse Proxy
  # ============================================
  nginx:
    image: nginx:alpine
    container_name: nexusforge-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - python-api
      - nodejs-api
      - go-api
    networks:
      - nexusforge

  # ============================================
  # Prometheus Monitoring
  # ============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: nexusforge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - nexusforge

  # ============================================
  # Grafana Dashboards
  # ============================================
  grafana:
    image: grafana/grafana:latest
    container_name: nexusforge-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - nexusforge

# ============================================
# Networks
# ============================================
networks:
  nexusforge:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ============================================
# Volumes
# ============================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
